#pragma checksum "C:\Users\aeazh_000\Desktop\MarkedNote\MarkedNote\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "024f078a0ed8e6f131cc115b409b910830d42a32"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"024f078a0ed8e6f131cc115b409b910830d42a32", @"/Views/Home/Index.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("container"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("background-color:lightblue"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 17, true);
            WriteLiteral("<!DOCTYPE html>\r\n");
            EndContext();
            BeginContext(17, 676, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cf335080a3fe474faccb69f533dd9519", async() => {
                BeginContext(23, 663, true);
                WriteLiteral(@"
    <title>MarkedNote</title>


    <link rel=""stylesheet"" href=""https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css"">
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"">
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js""></script>
    <script src=""https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js""></script>

");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(693, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(695, 6014, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d28afdb187b946af96db12f2a018d1a4", async() => {
                BeginContext(754, 5948, true);
                WriteLiteral(@"
    <nav class=""navbar navbar-expand-sm bg-primary navbar-dark"">
        <ul class=""navbar-nav"">
            <li class=""nav-item active"">
                <a class=""nav-link"" id=""home"">Home</a>
            </li>
            <li class=""nav-item"" id=""loginLi"">

            </li>
        </ul>
    </nav>



    <div id=""ContentBody"" class=""afternav container"" style=""padding-top: 20px"">

    </div>

    <script type=""text/javascript"">

        $(document).ready(function () {
            loadNavigationBar()
            getNotes();

            $(""#home"").click(function () {
                document.location.href = ""/"";
            })

            $(""#register"").click(function () {
                document.location.href = ""/register""
            })

            $(""#login"").click(function () {
                document.location.href = ""/login""
            })

            $(""#logout"").click(function () {
                sessionStorage.removeItem(""Token"");
                document.");
                WriteLiteral(@"location.reload();
            })

            
        })

        function getNotes() {
            if (sessionStorage.getItem(""Token"") != null) {
                $.ajax({
                    type: ""GET"",
                    url: ""/notes/mynotes"",
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader('Authorization', ""bearer "" + sessionStorage.getItem(""Token""));
                    },
                    contentType: ""application/json"",
                    success: function (res) {

                        let content = res.notes;
                        content.forEach(x => {
                            let tags = """";
                            let link = ""Link:"";
                            if (x.tags != null) {
                                x.tags.forEach(y => {
                                    tags += ` <p style=""background-color:coral;display:inline-block; padding:5px; ""> ${y}</p>`
                                })
                ");
                WriteLiteral(@"            }
                            if (x.link != null) {
                                link += ` <a href=""${parseLink(x.link)} "" style=""color: blue; width: 80 % "" target=""_blank""> ${x.link} <a>`
                            }
                            else {
                                link += ` no link`
                            }

                            $(""#ContentBody"").prepend(`
                            <button class=""btn btn-danger"" style=""margin-bottom:5px"" onClick=""deleteNote(${x.id})"">Delete</button>
                            <button class=""btn btn-success"" style=""margin-bottom:5px"" onClick=""editNote(${x.id})"">Edit</button>
                            <br>
                            <div class=""container rounded border border-dark"" style=""background-color:rgb(116, 120, 197);padding:5px"">
                            <h2 style=""background-color: #92a8d1; padding:10px"" class=""rounded border border-dark""> ${x.title}</h2>
                            <textarea readon");
                WriteLiteral(@"ly cols=""40"" rows=""5"" style=""background-color:blue;color:yellow; padding:5px; display:block; width:100%; margin-bottom:3px"" class=""rounded border border-dark"" > ${x.content} </textarea>

                            
                            <em><p class=""float-right"">Author: ${x.email}  [${parseDate(x.date)}]<p></em>
                            ${link}

                            </div>
                            <br>
                            `)
                        })
                        //add searches later
                        $(""#ContentBody"").prepend(`<p></p>`)
                        //$(""#ContentBody"").prepend(`<input type=""text"" value=""search""></input>`)
                        $(""#ContentBody"").prepend(`<button class=""btn btn-primary"" onClick=""newNote()"">new note</button>`)
                    },
                    error: function (err) {
                        alert(err)
                    }
                })
            }
            else {
               ");
                WriteLiteral(@" document.location.href = ""/login"";
            }

        }

        function editNote(id) {
            document.location.href = `/editNote/${id}`
        }

        function newNote() {
            document.location.href = `/newNote`
        }

        function deleteNote(id) {
            $.ajax({
                type: ""DELETE"",
                url: `notes/${id}`,
                beforeSend: function (xhr) {
                    xhr.setRequestHeader('Authorization', ""bearer "" + sessionStorage.getItem(""Token""));
                },
                success: function () {
                    alert(""deleted"");
                    document.location.reload();
                },
                error: function (err) {
                    alert(err);
                }
            })
            
        }

        function parseLink(link) {
            let http = ""http://"";
            let https = ""https://"";
            let linkIntro = link.substring(0, 7);
            if (http =");
                WriteLiteral(@"== linkIntro) {
                return link;
            }
            linkIntro = link.substring(0, 8);
            if (https === linkIntro) {
                return link;
            }

            return http + link;
        }

        function parseDate(date) {
            var index = date.indexOf(""T"");
            return date.substring(0, index);
        }

        function loadNavigationBar() {
            let defaultNavBar = `???`
            if (sessionStorage.getItem(""Token"") == null) {
                defaultNavBar = `<a class=""nav-link"" id=""login"">Login</a>`
            }
            else {
                defaultNavBar = `<a class=""nav-link"" id=""logout"">Logout</a>`

            }
            document.getElementById(""loginLi"").innerHTML = defaultNavBar
        }

    </script>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(6709, 22, true);
            WriteLiteral("\r\n\r\n<footer> </footer>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
